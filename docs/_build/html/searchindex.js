Search.setIndex({
  docnames: [
    "_generate/cornflakes.apply_match",
    "_generate/cornflakes.attach_log",
    "_generate/cornflakes.builder.generate_config_group_module",
    "_generate/cornflakes.builder.generate_config_module",
    "_generate/cornflakes.builder.generate_enum_module",
    "_generate/cornflakes.cli.bump_version",
    "_generate/cornflakes.cli.cli",
    "_generate/cornflakes.cli.update_deps",
    "_generate/cornflakes.common.check_type",
    "_generate/cornflakes.common.datetime_ms",
    "_generate/cornflakes.common.default_ca_path",
    "_generate/cornflakes.common.extract_var_names",
    "_generate/cornflakes.common.get_actual_type",
    "_generate/cornflakes.common.get_method_definition",
    "_generate/cornflakes.common.get_method_type_hint",
    "_generate/cornflakes.common.has_return_statement",
    "_generate/cornflakes.common.patch_module",
    "_generate/cornflakes.common.recursive_update",
    "_generate/cornflakes.common.type_to_str",
    "_generate/cornflakes.common.unquoted_string",
    "_generate/cornflakes.decorator.Index",
    "_generate/cornflakes.decorator.click_cli",
    "_generate/cornflakes.decorator.config",
    "_generate/cornflakes.decorator.config_group",
    "_generate/cornflakes.decorator.dataclass",
    "_generate/cornflakes.decorator.field",
    "_generate/cornflakes.decorator.funcat",
    "_generate/cornflakes.decorator.string_builder",
    "_generate/cornflakes.decorator.wrap_kwargs",
    "_generate/cornflakes.eval_csv",
    "_generate/cornflakes.eval_datetime",
    "_generate/cornflakes.eval_type",
    "_generate/cornflakes.extract_between",
    "_generate/cornflakes.generate_config_group_module",
    "_generate/cornflakes.ini_load",
    "_generate/cornflakes.logging.attach_log",
    "_generate/cornflakes.logging.setup_logging",
    "_generate/cornflakes.packaging.bump_version",
    "_generate/cornflakes.packaging.update_deps",
    "_generate/cornflakes.parser.yaml_load",
    "_generate/cornflakes.patch_module",
    "_generate/cornflakes.setup_logging",
    "_generate/cornflakes.yaml_load",
    "algorithms/algorithms",
    "authors",
    "code_of_conduct",
    "contributing",
    "index",
    "installation",
    "modules",
    "readme",
    "reference",
    "requirements",
    "snake",
    "snake.base",
    "snake.solver",
    "snake.solver.dqn",
    "snake.util",
    "usage",
  ],
  filenames: [
    "_generate/cornflakes.apply_match.rst",
    "_generate/cornflakes.attach_log.rst",
    "_generate/cornflakes.builder.generate_config_group_module.rst",
    "_generate/cornflakes.builder.generate_config_module.rst",
    "_generate/cornflakes.builder.generate_enum_module.rst",
    "_generate/cornflakes.cli.bump_version.rst",
    "_generate/cornflakes.cli.cli.rst",
    "_generate/cornflakes.cli.update_deps.rst",
    "_generate/cornflakes.common.check_type.rst",
    "_generate/cornflakes.common.datetime_ms.rst",
    "_generate/cornflakes.common.default_ca_path.rst",
    "_generate/cornflakes.common.extract_var_names.rst",
    "_generate/cornflakes.common.get_actual_type.rst",
    "_generate/cornflakes.common.get_method_definition.rst",
    "_generate/cornflakes.common.get_method_type_hint.rst",
    "_generate/cornflakes.common.has_return_statement.rst",
    "_generate/cornflakes.common.patch_module.rst",
    "_generate/cornflakes.common.recursive_update.rst",
    "_generate/cornflakes.common.type_to_str.rst",
    "_generate/cornflakes.common.unquoted_string.rst",
    "_generate/cornflakes.decorator.Index.rst",
    "_generate/cornflakes.decorator.click_cli.rst",
    "_generate/cornflakes.decorator.config.rst",
    "_generate/cornflakes.decorator.config_group.rst",
    "_generate/cornflakes.decorator.dataclass.rst",
    "_generate/cornflakes.decorator.field.rst",
    "_generate/cornflakes.decorator.funcat.rst",
    "_generate/cornflakes.decorator.string_builder.rst",
    "_generate/cornflakes.decorator.wrap_kwargs.rst",
    "_generate/cornflakes.eval_csv.rst",
    "_generate/cornflakes.eval_datetime.rst",
    "_generate/cornflakes.eval_type.rst",
    "_generate/cornflakes.extract_between.rst",
    "_generate/cornflakes.generate_config_group_module.rst",
    "_generate/cornflakes.ini_load.rst",
    "_generate/cornflakes.logging.attach_log.rst",
    "_generate/cornflakes.logging.setup_logging.rst",
    "_generate/cornflakes.packaging.bump_version.rst",
    "_generate/cornflakes.packaging.update_deps.rst",
    "_generate/cornflakes.parser.yaml_load.rst",
    "_generate/cornflakes.patch_module.rst",
    "_generate/cornflakes.setup_logging.rst",
    "_generate/cornflakes.yaml_load.rst",
    "algorithms/algorithms.md",
    "authors.rst",
    "code_of_conduct.rst",
    "contributing.rst",
    "index.rst",
    "installation.rst",
    "modules.rst",
    "readme.rst",
    "reference.rst",
    "requirements.txt",
    "snake.rst",
    "snake.base.rst",
    "snake.solver.rst",
    "snake.solver.dqn.rst",
    "snake.util.rst",
    "usage.rst",
  ],
  titles: [
    "snake.apply_match",
    "snake.attach_log",
    "snake.builder.generate_config_group_module",
    "snake.builder.generate_config_module",
    "snake.builder.generate_enum_module",
    "snake.cli.bump_version",
    "snake.cli.cli",
    "snake.cli.update_deps",
    "snake.common.check_type",
    "snake.common.datetime_ms",
    "snake.common.default_ca_path",
    "snake.common.extract_var_names",
    "snake.common.get_actual_type",
    "snake.common.get_method_definition",
    "snake.common.get_method_type_hint",
    "snake.common.has_return_statement",
    "snake.common.patch_module",
    "snake.common.recursive_update",
    "snake.common.type_to_str",
    "snake.common.unquoted_string",
    "snake.decorator.Index",
    "snake.decorator.click_cli",
    "snake.decorator.config",
    "snake.decorator.config_group",
    "snake.decorator.dataclass",
    "snake.decorator.field",
    "snake.decorator.funcat",
    "snake.decorator.string_builder",
    "snake.decorator.wrap_kwargs",
    "snake.eval_csv",
    "snake.eval_datetime",
    "snake.eval_type",
    "snake.extract_between",
    "snake.generate_config_group_module",
    "snake.ini_load",
    "snake.logging.attach_log",
    "snake.logging.setup_logging",
    "snake.packaging.bump_version",
    "snake.packaging.update_deps",
    "snake.parser.yaml_load",
    "snake.patch_module",
    "snake.setup_logging",
    "snake.yaml_load",
    "Algorithms",
    "Credits",
    "&lt;no title&gt;",
    "Contributor Guide",
    "Indices and tables",
    "Installation",
    "snake",
    "&lt;no title&gt;",
    "Reference",
    "&lt;no title&gt;",
    "snake package",
    "snake.base package",
    "snake.solver package",
    "snake.solver.dqn package",
    "snake.util package",
    "Usage",
  ],
  terms: {
    In: 43,
    game: [43, 49, 51, 54],
    snake: [43, 46, 48, 51],
    i: [43, 46, 48, 54],
    allow: [43, 46],
    move: [43, 53, 54],
    insid: [43, 46],
    2: [43, 52, 54],
    dimension: 43,
    plai: 43,
    field: 43,
    map: [43, 49, 53, 55],
    surround: 43,
    wall: [43, 53, 54],
    At: 43,
    each: 43,
    discret: 43,
    interv: 43,
    time: 43,
    step: [43, 53, 54],
    must: [43, 46],
    forward: 43,
    turn: 43,
    left: [43, 53, 54],
    right: [43, 53, 54],
    requir: [43, 46, 48],
    cannot: 43,
    stop: 43,
    The: [43, 46, 48, 54],
    randomli: 43,
    gener: [43, 46, 55],
    place: 43,
    one: 43,
    piec: 43,
    food: [43, 53, 54],
    whenev: 43,
    when: 43,
    onto: 43,
    eaten: 43,
    "": [43, 54],
    length: 43,
    grow: 43,
    goal: 43,
    eat: 43,
    mani: 43,
    possibl: 43,
    without: [43, 46],
    end: 43,
    collid: 43,
    itself: [43, 46],
    our: 43,
    set: [43, 47],
    8: [43, 46, 52],
    unit: [43, 46],
    tall: 43,
    wide: 43,
    consist: 43,
    64: 43,
    avail: [43, 46],
    space: 43,
    initi: 43,
    begin: 43,
    top: [43, 54],
    corner: [43, 54],
    face: 43,
    an: [43, 46, 54],
    4: [43, 52, 54],
    therefor: 43,
    can: [43, 46, 48],
    most: [43, 48],
    60: 43,
    befor: [43, 46],
    fill: [43, 54],
    up: [43, 47, 53, 54],
    entir: 43,
    all: [43, 46, 54, 55],
    problem: 43,
    ar: [43, 46],
    subclass: 43,
    basesolv: [43, 53, 55],
    overrid: 43,
    next_direc: [43, 53, 55],
    return: [43, 54],
    next: [43, 55],
    direct: [43, 54, 55],
    provid: 43,
    method: [43, 48, 54],
    find: 43,
    from: [43, 46, 47],
    head: [43, 53, 54],
    other: 43,
    point: [43, 49, 53],
    It: [43, 46],
    doe: 43,
    directli: [43, 54],
    decid: 43,
    help: 43,
    work: [43, 46],
    out: 43,
    us: [43, 46, 54],
    breadth: 43,
    first: [43, 44],
    search: [43, 47],
    intuit: 43,
    we: 43,
    expect: 43,
    straight: 43,
    so: 43,
    less: 43,
    scatter: 43,
    empti: [43, 53, 54],
    trick: 43,
    implement: 43,
    dure: 43,
    iter: 43,
    adjac: [43, 54],
    last: 43,
    travers: 43,
    e: 43,
    cyclic: 43,
    undirect: 43,
    unweight: 43,
    graph: 43,
    np: 43,
    hard: 43,
    heurist: 43,
    suboptim: 43,
    solut: 43,
    suppos: 43,
    want: 43,
    A: 43,
    b: 43,
    between: 43,
    two: 43,
    extend: [43, 54],
    pair: 43,
    until: 43,
    extens: [43, 46],
    found: [43, 46],
    along: 43,
    think: 43,
    safe: 43,
    otherwis: 43,
    make: [43, 46, 48],
    wander: 43,
    around: 43,
    As: 43,
    need: [43, 46],
    depend: [43, 46],
    concret: 43,
    s1: 43,
    d: 43,
    follow: [43, 46],
    below: 43,
    comput: 43,
    p1: [43, 54],
    If: [43, 46, 48],
    exist: 43,
    go: 43,
    virtual: 43,
    s2: 43,
    same: 43,
    p2: [43, 54],
    its: 43,
    tail: [43, 53, 54],
    let: 43,
    p3: 43,
    5: 43,
    farthest: 43,
    To: [43, 46, 48],
    reduc: 43,
    averag: 43,
    success: 43,
    enabl: 43,
    again: 43,
    Then: 43,
    assign: 43,
    index: [43, 47],
    imag: 43,
    show: 43,
    construct: 43,
    abov: 43,
    fix: 43,
    0: [43, 46, 52, 54],
    1: [43, 52, 54],
    consid: 43,
    bodi: [43, 53, 54],
    respect: 43,
    unreach: 43,
    final: 43,
    join: 43,
    start: [43, 46],
    which: 43,
    form: [43, 46],
    note: [43, 46, 48],
    thi: [43, 46, 48],
    wai: 43,
    onli: 43,
    posit: [43, 54],
    similar: 43,
    situat: 43,
    describ: 43,
    tediou: 43,
    consum: 43,
    accord: 43,
    rule: 43,
    deep: 43,
    reinforc: 43,
    learn: 43,
    name: 43,
    q: 43,
    network: 43,
    solv: 43,
    ha: 43,
    three: 43,
    optim: 43,
    doubl: 43,
    3: [43, 46, 52, 54],
    priorit: 43,
    experi: 43,
    replai: 43,
    duel: 43,
    structur: 43,
    reiter: 43,
    here: [43, 46],
    For: [43, 46],
    those: 43,
    who: 43,
    interest: [43, 46],
    research: 43,
    perform: 43,
    differ: 43,
    combin: 43,
    train: 43,
    agent: 43,
    neural: 43,
    estim: 43,
    valu: [43, 54],
    function: [43, 46],
    input: 43,
    while: 43,
    output: 43,
    reward: 43,
    polici: 43,
    epsilon: 43,
    give: 43,
    chanc: [43, 46],
    exploit: 43,
    environ: [43, 47],
    part: 43,
    global: 43,
    store: 43,
    content: [43, 49, 51],
    type: [43, 53, 54],
    featur: [43, 47],
    binar: 43,
    repres: 43,
    integ: [43, 54],
    One: 43,
    element: 43,
    indic: 43,
    correspond: 43,
    under: [43, 46],
    thought: 43,
    second: 43,
    local: 43,
    tell: 43,
    contain: 43,
    whether: 43,
    front: 43,
    danger: 43,
    There: 43,
    rel: [43, 54],
    mean: 43,
    leftward: 43,
    rightward: [43, 54],
    sinc: 43,
    current: 43,
    also: [43, 46],
    exampl: [43, 46],
    toward: 43,
    side: 43,
    compar: 43,
    absolut: 43,
    upward: 43,
    downward: [43, 54],
    alwai: [43, 48],
    moreov: 43,
    have: [43, 48],
    theoret: 43,
    more: 43,
    effici: 43,
    symmetr: 43,
    both: 43,
    horizont: 43,
    vertic: 43,
    prove: 43,
    model: 43,
    3000000: 43,
    natur: 43,
    figur: 43,
    better: 43,
    than: 43,
    becaus: 43,
    red: 43,
    line: [43, 46],
    orang: 43,
    higher: 43,
    green: 43,
    blue: 43,
    conduc: 43,
    thei: 43,
    perspect: 43,
    total: 43,
    shown: 43,
    among: 43,
    achiev: 43,
    best: 43,
    receiv: 43,
    highest: 43,
    get: 43,
    lower: 43,
    pleas: [43, 46, 48],
    my: 43,
    present: 43,
    detail: 43,
    g: 43,
    design: 43,
    etc: 43,
    tapsel: 43,
    j: 43,
    nokia: 43,
    6110: 43,
    2015: 43,
    link: 43,
    mnih: 43,
    v: 43,
    kavukcuoglu: 43,
    k: 43,
    silver: 43,
    rusu: 43,
    veness: 43,
    bellemar: 43,
    m: 43,
    et: 43,
    al: 43,
    human: 43,
    level: 43,
    control: 43,
    through: [43, 48],
    518: 43,
    7540: 43,
    529: 43,
    533: 43,
    van: 43,
    hasselt: 43,
    h: 43,
    guez: 43,
    2016: 43,
    proceed: 43,
    thirtieth: 43,
    aaai: 43,
    confer: 43,
    artifici: 43,
    intellig: 43,
    2094: 43,
    2100: 43,
    schaul: 43,
    t: [43, 48],
    quan: 43,
    antonogl: 43,
    iclr: 43,
    wang: 43,
    z: 43,
    hessel: 43,
    lanctot: 43,
    de: 43,
    freita: 43,
    n: 43,
    architectur: 43,
    icml: 43,
    semjon: 44,
    geist: 44,
    iono: 44,
    com: [44, 48],
    none: [44, 53, 54],
    yet: 44,
    why: 44,
    thank: 46,
    you: [46, 48],
    improv: 46,
    open: 46,
    sourc: [46, 47, 54, 55, 57],
    apache2: 46,
    licens: 46,
    highli: 46,
    welcom: 46,
    contribut: 46,
    pull: 46,
    list: [46, 54],
    import: 46,
    resourc: [46, 55],
    code: 46,
    issu: 46,
    tracker: 46,
    conduct: 46,
    python: [46, 48],
    tool: 46,
    poetri: [46, 48],
    nox: 46,
    instal: [46, 47],
    them: 46,
    pip: [46, 48],
    packag: [46, 47, 49],
    now: 46,
    run: [46, 48],
    interact: 46,
    session: 46,
    command: [46, 48],
    interfac: 46,
    full: 46,
    suit: 46,
    specif: 46,
    invok: 46,
    like: 46,
    locat: 46,
    directori: 46,
    written: 46,
    pytest: 46,
    framework: 46,
    sphinx: [46, 52],
    togeth: 46,
    sever: 46,
    further: 46,
    pandoc: 46,
    translat: 46,
    variou: 46,
    format: 46,
    r: 46,
    doc: 46,
    txt: 46,
    html: 46,
    folder: 46,
    static: [46, 54],
    file: 46,
    _build: 46,
    simpli: 46,
    favorit: 46,
    browser: 46,
    against: 46,
    branch: 46,
    meet: 46,
    guidelin: 46,
    accept: 46,
    pass: 46,
    error: 46,
    warn: 46,
    includ: 46,
    maintain: 46,
    high: 46,
    coverag: 46,
    add: [46, 54],
    updat: [46, 53, 57],
    accordingli: 46,
    lint: 46,
    check: [46, 54],
    commit: 46,
    pre: 46,
    git: [46, 48],
    hook: 46,
    recommend: 46,
    anyth: 46,
    talk: 46,
    over: 46,
    owner: 46,
    valid: 46,
    approach: 46,
    stabl: 47,
    releas: [47, 55],
    refer: 47,
    usag: 47,
    contributor: 47,
    guid: [47, 48],
    how: 47,
    report: 47,
    bug: 47,
    request: 47,
    your: [47, 48],
    develop: 47,
    test: 47,
    project: 47,
    build: 47,
    view: 47,
    document: 47,
    submit: 47,
    chang: 47,
    credit: 47,
    lead: 47,
    modul: [47, 49, 51],
    page: 47,
    termin: 48,
    prefer: 48,
    recent: 48,
    don: 48,
    process: 48,
    download: 48,
    github: 48,
    repo: 48,
    either: 48,
    clone: 48,
    public: 48,
    repositori: 48,
    sgeist: 48,
    Or: 48,
    tarbal: 48,
    curl: 48,
    ojl: 48,
    http: 48,
    master: 48,
    onc: 48,
    copi: [48, 53, 54],
    subpackag: [49, 51],
    base: [49, 53, 57],
    submodul: [49, 51],
    direc: [49, 53],
    po: [49, 53],
    solver: [49, 53],
    greedi: [49, 53],
    hamilton: [49, 53],
    path: [49, 53, 54],
    util: [49, 53],
    sumtre: [49, 53],
    gui: [49, 51],
    6: 52,
    sphinx_rtd_them: 52,
    rtd: 52,
    dark: 52,
    mode: 52,
    automodapi: 52,
    14: 52,
    sphinx_click: 52,
    click: 52,
    myst: 52,
    parser: 52,
    pyyaml: 52,
    breath: 52,
    35: 52,
    down: [53, 54],
    opposit: [53, 54],
    capac: [53, 54, 57],
    create_food: [53, 54],
    create_rand_food: [53, 54],
    has_food: [53, 54],
    is_empti: [53, 54],
    is_ful: [53, 54],
    is_insid: [53, 54],
    is_saf: [53, 54],
    num_col: [53, 54],
    num_row: [53, 54],
    reset: [53, 54],
    rm_food: [53, 54],
    pointtyp: [53, 54],
    body_dl: [53, 54],
    body_hor: [53, 54],
    body_lu: [53, 54],
    body_rd: [53, 54],
    body_ur: [53, 54],
    body_v: [53, 54],
    head_d: [53, 54],
    head_l: [53, 54],
    head_r: [53, 54],
    head_u: [53, 54],
    adj: [53, 54],
    all_adj: [53, 54],
    direc_to: [53, 54],
    manhattan_dist: [53, 54],
    x: [53, 54],
    y: [53, 54],
    dead: [53, 54],
    direc_next: [53, 54],
    len: [53, 54],
    move_path: [53, 54],
    dqn: [53, 55],
    histori: [53, 55],
    logger: [53, 55],
    memori: [53, 55],
    snakeact: [53, 55],
    close: [53, 55],
    data: [53, 57],
    insert: [53, 57],
    leav: [53, 57],
    max_leaf: [53, 57],
    min_leaf: [53, 57],
    retriev: [53, 57],
    sum: [53, 57],
    tree: [53, 57],
    class: [54, 55, 57],
    enum: 54,
    enumer: 54,
    object: [54, 55, 57],
    "2d": 54,
    properti: [54, 55, 57],
    do: 54,
    NOT: 54,
    modifi: 54,
    vice: 54,
    versa: 54,
    rm: 54,
    _food: 54,
    instead: 54,
    paramet: 54,
    fetch: 54,
    given: 54,
    107: 54,
    108: 54,
    104: 54,
    106: 54,
    105: 54,
    109: 54,
    103: 54,
    100: 54,
    102: 54,
    101: 54,
    coordin: 54,
    plane: 54,
    origin: 54,
    system: 54,
    axi: 54,
    adj_po: 54,
    self: 54,
    game_map: 54,
    init_direc: 54,
    init_bodi: 54,
    init_typ: 54,
    new_direc: 54,
    reset_map: 54,
    true: 54,
    super: 55,
    prioriti: 57,
    val: 57,
    tree_idx: 57,
  },
  objects: {
    "": [[53, 0, 0, "-", "snake"]],
    snake: [
      [54, 0, 0, "-", "base"],
      [55, 0, 0, "-", "solver"],
      [57, 0, 0, "-", "util"],
    ],
    "snake.base": [
      [54, 0, 0, "-", "direc"],
      [54, 0, 0, "-", "map"],
      [54, 0, 0, "-", "point"],
      [54, 0, 0, "-", "pos"],
      [54, 0, 0, "-", "snake"],
    ],
    "snake.base.direc": [[54, 1, 1, "", "Direc"]],
    "snake.base.direc.Direc": [
      [54, 2, 1, "", "DOWN"],
      [54, 2, 1, "", "LEFT"],
      [54, 2, 1, "", "NONE"],
      [54, 2, 1, "", "RIGHT"],
      [54, 2, 1, "", "UP"],
      [54, 3, 1, "", "opposite"],
    ],
    "snake.base.map": [[54, 1, 1, "", "Map"]],
    "snake.base.map.Map": [
      [54, 4, 1, "", "capacity"],
      [54, 3, 1, "", "copy"],
      [54, 3, 1, "", "create_food"],
      [54, 3, 1, "", "create_rand_food"],
      [54, 4, 1, "", "food"],
      [54, 3, 1, "", "has_food"],
      [54, 3, 1, "", "is_empty"],
      [54, 3, 1, "", "is_full"],
      [54, 3, 1, "", "is_inside"],
      [54, 3, 1, "", "is_safe"],
      [54, 4, 1, "", "num_cols"],
      [54, 4, 1, "", "num_rows"],
      [54, 3, 1, "", "point"],
      [54, 3, 1, "", "reset"],
      [54, 3, 1, "", "rm_food"],
    ],
    "snake.base.point": [
      [54, 1, 1, "", "Point"],
      [54, 1, 1, "", "PointType"],
    ],
    "snake.base.point.Point": [[54, 4, 1, "", "type"]],
    "snake.base.point.PointType": [
      [54, 2, 1, "", "BODY_DL"],
      [54, 2, 1, "", "BODY_HOR"],
      [54, 2, 1, "", "BODY_LU"],
      [54, 2, 1, "", "BODY_RD"],
      [54, 2, 1, "", "BODY_UR"],
      [54, 2, 1, "", "BODY_VER"],
      [54, 2, 1, "", "EMPTY"],
      [54, 2, 1, "", "FOOD"],
      [54, 2, 1, "", "HEAD_D"],
      [54, 2, 1, "", "HEAD_L"],
      [54, 2, 1, "", "HEAD_R"],
      [54, 2, 1, "", "HEAD_U"],
      [54, 2, 1, "", "WALL"],
    ],
    "snake.base.pos": [[54, 1, 1, "", "Pos"]],
    "snake.base.pos.Pos": [
      [54, 3, 1, "", "adj"],
      [54, 3, 1, "", "all_adj"],
      [54, 3, 1, "", "direc_to"],
      [54, 3, 1, "", "manhattan_dist"],
      [54, 4, 1, "", "x"],
      [54, 4, 1, "", "y"],
    ],
    "snake.base.snake": [[54, 1, 1, "", "Snake"]],
    "snake.base.snake.Snake": [
      [54, 4, 1, "", "bodies"],
      [54, 3, 1, "", "copy"],
      [54, 4, 1, "", "dead"],
      [54, 4, 1, "", "direc"],
      [54, 4, 1, "", "direc_next"],
      [54, 3, 1, "", "head"],
      [54, 3, 1, "", "len"],
      [54, 4, 1, "", "map"],
      [54, 3, 1, "", "move"],
      [54, 3, 1, "", "move_path"],
      [54, 3, 1, "", "reset"],
      [54, 4, 1, "", "steps"],
      [54, 3, 1, "", "tail"],
    ],
    "snake.solver": [[55, 0, 0, "-", "base"]],
    "snake.solver.base": [[55, 1, 1, "", "BaseSolver"]],
    "snake.solver.base.BaseSolver": [
      [55, 3, 1, "", "close"],
      [55, 4, 1, "", "map"],
      [55, 3, 1, "", "next_direc"],
      [55, 4, 1, "", "snake"],
    ],
    "snake.util": [[57, 0, 0, "-", "sumtree"]],
    "snake.util.sumtree": [[57, 1, 1, "", "SumTree"]],
    "snake.util.sumtree.SumTree": [
      [57, 4, 1, "", "capacity"],
      [57, 4, 1, "", "data"],
      [57, 3, 1, "", "insert"],
      [57, 3, 1, "", "leaves"],
      [57, 3, 1, "", "max_leaf"],
      [57, 3, 1, "", "min_leaf"],
      [57, 3, 1, "", "retrieve"],
      [57, 3, 1, "", "sum"],
      [57, 4, 1, "", "tree"],
      [57, 3, 1, "", "update"],
    ],
  },
  objtypes: {
    0: "py:module",
    1: "py:class",
    2: "py:attribute",
    3: "py:method",
    4: "py:property",
  },
  objnames: {
    0: ["py", "module", "Python module"],
    1: ["py", "class", "Python class"],
    2: ["py", "attribute", "Python attribute"],
    3: ["py", "method", "Python method"],
    4: ["py", "property", "Python property"],
  },
  titleterms: {
    snake: [
      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
      21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
      39, 40, 41, 42, 49, 53, 54, 55, 56, 57,
    ],
    apply_match: 0,
    attach_log: [1, 35],
    builder: [2, 3, 4],
    generate_config_group_modul: [2, 33],
    generate_config_modul: 3,
    generate_enum_modul: 4,
    cli: [5, 6, 7],
    bump_vers: [5, 37],
    update_dep: [7, 38],
    common: [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
    check_typ: 8,
    datetime_m: 9,
    default_ca_path: 10,
    extract_var_nam: 11,
    get_actual_typ: 12,
    get_method_definit: 13,
    get_method_type_hint: 14,
    has_return_stat: 15,
    patch_modul: [16, 40],
    recursive_upd: 17,
    type_to_str: 18,
    unquoted_str: 19,
    decor: [20, 21, 22, 23, 24, 25, 26, 27, 28],
    index: 20,
    click_cli: 21,
    config: 22,
    config_group: 23,
    dataclass: 24,
    field: 25,
    funcat: 26,
    string_build: 27,
    wrap_kwarg: 28,
    eval_csv: 29,
    eval_datetim: 30,
    eval_typ: 31,
    extract_between: 32,
    ini_load: 34,
    log: [35, 36],
    setup_log: [36, 41],
    packag: [37, 38, 51, 53, 54, 55, 56, 57],
    parser: 39,
    yaml_load: [39, 42],
    algorithm: 43,
    overview: 43,
    solver: [43, 55, 56],
    path: [43, 55],
    shortest: 43,
    longest: 43,
    greedi: [43, 55],
    hamilton: [43, 55],
    build: [43, 46],
    hamiltonian: 43,
    cycl: 43,
    take: 43,
    shortcut: 43,
    dqn: [43, 56],
    state: 43,
    vector: 43,
    action: 43,
    comparison: 43,
    attach: 43,
    refer: [43, 51],
    credit: 44,
    develop: [44, 46],
    lead: 44,
    contributor: [44, 46],
    guid: 46,
    how: 46,
    report: 46,
    bug: 46,
    request: 46,
    featur: 46,
    set: 46,
    up: 46,
    your: 46,
    environ: 46,
    test: 46,
    project: 46,
    view: 46,
    document: 46,
    submit: 46,
    chang: 46,
    content: [47, 53, 54, 55, 56, 57],
    indic: 47,
    tabl: 47,
    instal: 48,
    stabl: 48,
    releas: 48,
    from: 48,
    sourc: 48,
    subpackag: [53, 55],
    submodul: [53, 54, 55, 56, 57],
    game: 53,
    modul: [53, 54, 55, 56, 57],
    gui: 53,
    base: [54, 55],
    direc: 54,
    map: 54,
    point: 54,
    po: 54,
    histori: 56,
    logger: 56,
    memori: 56,
    snakeact: 56,
    util: 57,
    sumtre: 57,
    usag: 58,
  },
  envversion: {
    "sphinx.domains.c": 3,
    "sphinx.domains.changeset": 1,
    "sphinx.domains.citation": 1,
    "sphinx.domains.cpp": 9,
    "sphinx.domains.index": 1,
    "sphinx.domains.javascript": 3,
    "sphinx.domains.math": 2,
    "sphinx.domains.python": 4,
    "sphinx.domains.rst": 2,
    "sphinx.domains.std": 2,
    "sphinx.ext.viewcode": 1,
    sphinx: 58,
  },
  alltitles: {
    "snake.apply_match": [[0, "snake-apply-match"]],
    "snake.attach_log": [[1, "snake-attach-log"]],
    "snake.builder.generate_config_group_module": [
      [2, "snake-builder-generate-config-group-module"],
    ],
    "snake.builder.generate_config_module": [
      [3, "snake-builder-generate-config-module"],
    ],
    "snake.builder.generate_enum_module": [
      [4, "snake-builder-generate-enum-module"],
    ],
    "snake.cli.bump_version": [[5, "snake-cli-bump-version"]],
    "snake.cli.cli": [[6, "snake-cli-cli"]],
    "snake.cli.update_deps": [[7, "snake-cli-update-deps"]],
    "snake.common.check_type": [[8, "snake-common-check-type"]],
    "snake.common.datetime_ms": [[9, "snake-common-datetime-ms"]],
    "snake.common.default_ca_path": [[10, "snake-common-default-ca-path"]],
    "snake.common.extract_var_names": [[11, "snake-common-extract-var-names"]],
    "snake.common.get_actual_type": [[12, "snake-common-get-actual-type"]],
    "snake.common.get_method_definition": [
      [13, "snake-common-get-method-definition"],
    ],
    "snake.common.get_method_type_hint": [
      [14, "snake-common-get-method-type-hint"],
    ],
    "snake.common.has_return_statement": [
      [15, "snake-common-has-return-statement"],
    ],
    "snake.common.patch_module": [[16, "snake-common-patch-module"]],
    "snake.common.recursive_update": [[17, "snake-common-recursive-update"]],
    "snake.common.type_to_str": [[18, "snake-common-type-to-str"]],
    "snake.common.unquoted_string": [[19, "snake-common-unquoted-string"]],
    "snake.decorator.Index": [[20, "snake-decorator-index"]],
    "snake.decorator.click_cli": [[21, "snake-decorator-click-cli"]],
    "snake.decorator.config": [[22, "snake-decorator-config"]],
    "snake.decorator.config_group": [[23, "snake-decorator-config-group"]],
    "snake.decorator.dataclass": [[24, "snake-decorator-dataclass"]],
    "snake.decorator.field": [[25, "snake-decorator-field"]],
    "snake.decorator.funcat": [[26, "snake-decorator-funcat"]],
    "snake.decorator.string_builder": [[27, "snake-decorator-string-builder"]],
    "snake.decorator.wrap_kwargs": [[28, "snake-decorator-wrap-kwargs"]],
    "snake.eval_csv": [[29, "snake-eval-csv"]],
    "snake.eval_datetime": [[30, "snake-eval-datetime"]],
    "snake.eval_type": [[31, "snake-eval-type"]],
    "snake.extract_between": [[32, "snake-extract-between"]],
    "snake.generate_config_group_module": [
      [33, "snake-generate-config-group-module"],
    ],
    "snake.ini_load": [[34, "snake-ini-load"]],
    "snake.logging.attach_log": [[35, "snake-logging-attach-log"]],
    "snake.logging.setup_logging": [[36, "snake-logging-setup-logging"]],
    "snake.packaging.bump_version": [[37, "snake-packaging-bump-version"]],
    "snake.packaging.update_deps": [[38, "snake-packaging-update-deps"]],
    "snake.parser.yaml_load": [[39, "snake-parser-yaml-load"]],
    "snake.patch_module": [[40, "snake-patch-module"]],
    "snake.setup_logging": [[41, "snake-setup-logging"]],
    "snake.yaml_load": [[42, "snake-yaml-load"]],
    Algorithms: [[43, "algorithms"]],
    Overview: [[43, "overview"]],
    Solvers: [[43, "solvers"]],
    "Path Solver": [[43, "path-solver"]],
    "Shortest Path": [[43, "shortest-path"]],
    "Longest Path": [[43, "longest-path"]],
    "Greedy Solver": [[43, "greedy-solver"]],
    "Hamilton Solver": [[43, "hamilton-solver"]],
    "Build a Hamiltonian Cycle": [[43, "build-a-hamiltonian-cycle"]],
    "Take Shortcuts": [[43, "take-shortcuts"]],
    "DQN Solver": [[43, "dqn-solver"]],
    "State Vector": [[43, "state-vector"]],
    Actions: [[43, "actions"]],
    Comparisons: [[43, "comparisons"]],
    Attachments: [[43, "attachments"]],
    References: [[43, "references"]],
    Credits: [[44, "credits"]],
    "Development Lead": [[44, "development-lead"]],
    Contributors: [[44, "contributors"]],
    "Contributor Guide": [[46, "contributor-guide"]],
    "How to report a bug": [[46, "how-to-report-a-bug"]],
    "How to request a feature": [[46, "how-to-request-a-feature"]],
    "How to set up your development environment": [
      [46, "how-to-set-up-your-development-environment"],
    ],
    "How to test the project": [[46, "how-to-test-the-project"]],
    "How to build and view the documentation": [
      [46, "how-to-build-and-view-the-documentation"],
    ],
    "How to submit changes": [[46, "how-to-submit-changes"]],
    "Contents:": [[47, null]],
    "Indices and tables": [[47, "indices-and-tables"]],
    Installation: [[48, "installation"]],
    "Stable release": [[48, "stable-release"]],
    "From sources": [[48, "from-sources"]],
    snake: [[49, "snake"]],
    Reference: [[51, "reference"]],
    Packages: [[51, "packages"]],
    "snake package": [[53, "snake-package"]],
    Subpackages: [
      [53, "subpackages"],
      [55, "subpackages"],
    ],
    Submodules: [
      [53, "submodules"],
      [54, "submodules"],
      [55, "submodules"],
      [56, "submodules"],
      [57, "submodules"],
    ],
    "snake.game module": [[53, "snake-game-module"]],
    "snake.gui module": [[53, "snake-gui-module"]],
    "Module contents": [
      [53, "module-snake"],
      [54, "module-snake.base"],
      [55, "module-snake.solver"],
      [56, "module-contents"],
      [57, "module-snake.util"],
    ],
    "snake.base package": [[54, "snake-base-package"]],
    "snake.base.direc module": [[54, "module-snake.base.direc"]],
    "snake.base.map module": [[54, "module-snake.base.map"]],
    "snake.base.point module": [[54, "module-snake.base.point"]],
    "snake.base.pos module": [[54, "module-snake.base.pos"]],
    "snake.base.snake module": [[54, "module-snake.base.snake"]],
    "snake.solver package": [[55, "snake-solver-package"]],
    "snake.solver.base module": [[55, "module-snake.solver.base"]],
    "snake.solver.greedy module": [[55, "snake-solver-greedy-module"]],
    "snake.solver.hamilton module": [[55, "snake-solver-hamilton-module"]],
    "snake.solver.path module": [[55, "snake-solver-path-module"]],
    "snake.solver.dqn package": [[56, "snake-solver-dqn-package"]],
    "snake.solver.dqn.history module": [
      [56, "snake-solver-dqn-history-module"],
    ],
    "snake.solver.dqn.logger module": [[56, "snake-solver-dqn-logger-module"]],
    "snake.solver.dqn.memory module": [[56, "snake-solver-dqn-memory-module"]],
    "snake.solver.dqn.snakeaction module": [
      [56, "snake-solver-dqn-snakeaction-module"],
    ],
    "snake.util package": [[57, "snake-util-package"]],
    "snake.util.sumtree module": [[57, "module-snake.util.sumtree"]],
    Usage: [[58, "usage"]],
  },
  indexentries: {
    module: [
      [51, "module-snake"],
      [53, "module-snake"],
      [54, "module-snake.base"],
      [54, "module-snake.base.direc"],
      [54, "module-snake.base.map"],
      [54, "module-snake.base.point"],
      [54, "module-snake.base.pos"],
      [54, "module-snake.base.snake"],
      [55, "module-snake.solver"],
      [55, "module-snake.solver.base"],
      [57, "module-snake.util"],
      [57, "module-snake.util.sumtree"],
    ],
    snake: [
      [51, "module-snake"],
      [53, "module-snake"],
    ],
    "body_dl (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.BODY_DL"],
    ],
    "body_hor (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.BODY_HOR"],
    ],
    "body_lu (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.BODY_LU"],
    ],
    "body_rd (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.BODY_RD"],
    ],
    "body_ur (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.BODY_UR"],
    ],
    "body_ver (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.BODY_VER"],
    ],
    "down (snake.base.direc.direc attribute)": [
      [54, "snake.base.direc.Direc.DOWN"],
    ],
    "direc (class in snake.base.direc)": [[54, "snake.base.direc.Direc"]],
    "empty (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.EMPTY"],
    ],
    "food (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.FOOD"],
    ],
    "head_d (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.HEAD_D"],
    ],
    "head_l (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.HEAD_L"],
    ],
    "head_r (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.HEAD_R"],
    ],
    "head_u (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.HEAD_U"],
    ],
    "left (snake.base.direc.direc attribute)": [
      [54, "snake.base.direc.Direc.LEFT"],
    ],
    "map (class in snake.base.map)": [[54, "snake.base.map.Map"]],
    "none (snake.base.direc.direc attribute)": [
      [54, "snake.base.direc.Direc.NONE"],
    ],
    "point (class in snake.base.point)": [[54, "snake.base.point.Point"]],
    "pointtype (class in snake.base.point)": [
      [54, "snake.base.point.PointType"],
    ],
    "pos (class in snake.base.pos)": [[54, "snake.base.pos.Pos"]],
    "right (snake.base.direc.direc attribute)": [
      [54, "snake.base.direc.Direc.RIGHT"],
    ],
    "snake (class in snake.base.snake)": [[54, "snake.base.snake.Snake"]],
    "up (snake.base.direc.direc attribute)": [
      [54, "snake.base.direc.Direc.UP"],
    ],
    "wall (snake.base.point.pointtype attribute)": [
      [54, "snake.base.point.PointType.WALL"],
    ],
    "adj() (snake.base.pos.pos method)": [[54, "snake.base.pos.Pos.adj"]],
    "all_adj() (snake.base.pos.pos method)": [
      [54, "snake.base.pos.Pos.all_adj"],
    ],
    "bodies (snake.base.snake.snake property)": [
      [54, "snake.base.snake.Snake.bodies"],
    ],
    "capacity (snake.base.map.map property)": [
      [54, "snake.base.map.Map.capacity"],
    ],
    "copy() (snake.base.map.map method)": [[54, "snake.base.map.Map.copy"]],
    "copy() (snake.base.snake.snake method)": [
      [54, "snake.base.snake.Snake.copy"],
    ],
    "create_food() (snake.base.map.map method)": [
      [54, "snake.base.map.Map.create_food"],
    ],
    "create_rand_food() (snake.base.map.map method)": [
      [54, "snake.base.map.Map.create_rand_food"],
    ],
    "dead (snake.base.snake.snake property)": [
      [54, "snake.base.snake.Snake.dead"],
    ],
    "direc (snake.base.snake.snake property)": [
      [54, "snake.base.snake.Snake.direc"],
    ],
    "direc_next (snake.base.snake.snake property)": [
      [54, "snake.base.snake.Snake.direc_next"],
    ],
    "direc_to() (snake.base.pos.pos method)": [
      [54, "snake.base.pos.Pos.direc_to"],
    ],
    "food (snake.base.map.map property)": [[54, "snake.base.map.Map.food"]],
    "has_food() (snake.base.map.map method)": [
      [54, "snake.base.map.Map.has_food"],
    ],
    "head() (snake.base.snake.snake method)": [
      [54, "snake.base.snake.Snake.head"],
    ],
    "is_empty() (snake.base.map.map method)": [
      [54, "snake.base.map.Map.is_empty"],
    ],
    "is_full() (snake.base.map.map method)": [
      [54, "snake.base.map.Map.is_full"],
    ],
    "is_inside() (snake.base.map.map method)": [
      [54, "snake.base.map.Map.is_inside"],
    ],
    "is_safe() (snake.base.map.map method)": [
      [54, "snake.base.map.Map.is_safe"],
    ],
    "len() (snake.base.snake.snake method)": [
      [54, "snake.base.snake.Snake.len"],
    ],
    "manhattan_dist() (snake.base.pos.pos static method)": [
      [54, "snake.base.pos.Pos.manhattan_dist"],
    ],
    "map (snake.base.snake.snake property)": [
      [54, "snake.base.snake.Snake.map"],
    ],
    "move() (snake.base.snake.snake method)": [
      [54, "snake.base.snake.Snake.move"],
    ],
    "move_path() (snake.base.snake.snake method)": [
      [54, "snake.base.snake.Snake.move_path"],
    ],
    "num_cols (snake.base.map.map property)": [
      [54, "snake.base.map.Map.num_cols"],
    ],
    "num_rows (snake.base.map.map property)": [
      [54, "snake.base.map.Map.num_rows"],
    ],
    "opposite() (snake.base.direc.direc static method)": [
      [54, "snake.base.direc.Direc.opposite"],
    ],
    "point() (snake.base.map.map method)": [[54, "snake.base.map.Map.point"]],
    "reset() (snake.base.map.map method)": [[54, "snake.base.map.Map.reset"]],
    "reset() (snake.base.snake.snake method)": [
      [54, "snake.base.snake.Snake.reset"],
    ],
    "rm_food() (snake.base.map.map method)": [
      [54, "snake.base.map.Map.rm_food"],
    ],
    "snake.base": [[54, "module-snake.base"]],
    "snake.base.direc": [[54, "module-snake.base.direc"]],
    "snake.base.map": [[54, "module-snake.base.map"]],
    "snake.base.point": [[54, "module-snake.base.point"]],
    "snake.base.pos": [[54, "module-snake.base.pos"]],
    "snake.base.snake": [[54, "module-snake.base.snake"]],
    "steps (snake.base.snake.snake property)": [
      [54, "snake.base.snake.Snake.steps"],
    ],
    "tail() (snake.base.snake.snake method)": [
      [54, "snake.base.snake.Snake.tail"],
    ],
    "type (snake.base.point.point property)": [
      [54, "snake.base.point.Point.type"],
    ],
    "x (snake.base.pos.pos property)": [[54, "snake.base.pos.Pos.x"]],
    "y (snake.base.pos.pos property)": [[54, "snake.base.pos.Pos.y"]],
    "basesolver (class in snake.solver.base)": [
      [55, "snake.solver.base.BaseSolver"],
    ],
    "close() (snake.solver.base.basesolver method)": [
      [55, "snake.solver.base.BaseSolver.close"],
    ],
    "map (snake.solver.base.basesolver property)": [
      [55, "snake.solver.base.BaseSolver.map"],
    ],
    "next_direc() (snake.solver.base.basesolver method)": [
      [55, "snake.solver.base.BaseSolver.next_direc"],
    ],
    "snake (snake.solver.base.basesolver property)": [
      [55, "snake.solver.base.BaseSolver.snake"],
    ],
    "snake.solver": [[55, "module-snake.solver"]],
    "snake.solver.base": [[55, "module-snake.solver.base"]],
    "sumtree (class in snake.util.sumtree)": [
      [57, "snake.util.sumtree.SumTree"],
    ],
    "capacity (snake.util.sumtree.sumtree property)": [
      [57, "snake.util.sumtree.SumTree.capacity"],
    ],
    "data (snake.util.sumtree.sumtree property)": [
      [57, "snake.util.sumtree.SumTree.data"],
    ],
    "insert() (snake.util.sumtree.sumtree method)": [
      [57, "snake.util.sumtree.SumTree.insert"],
    ],
    "leaves() (snake.util.sumtree.sumtree method)": [
      [57, "snake.util.sumtree.SumTree.leaves"],
    ],
    "max_leaf() (snake.util.sumtree.sumtree method)": [
      [57, "snake.util.sumtree.SumTree.max_leaf"],
    ],
    "min_leaf() (snake.util.sumtree.sumtree method)": [
      [57, "snake.util.sumtree.SumTree.min_leaf"],
    ],
    "retrieve() (snake.util.sumtree.sumtree method)": [
      [57, "snake.util.sumtree.SumTree.retrieve"],
    ],
    "snake.util": [[57, "module-snake.util"]],
    "snake.util.sumtree": [[57, "module-snake.util.sumtree"]],
    "sum() (snake.util.sumtree.sumtree method)": [
      [57, "snake.util.sumtree.SumTree.sum"],
    ],
    "tree (snake.util.sumtree.sumtree property)": [
      [57, "snake.util.sumtree.SumTree.tree"],
    ],
    "update() (snake.util.sumtree.sumtree method)": [
      [57, "snake.util.sumtree.SumTree.update"],
    ],
  },
});
