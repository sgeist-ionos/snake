[tool.poetry]
name = "snake"
version = "0.0.1" # <<FORCE_BUMP>>
description = "Snake Game"
authors = ["Semjon Geist <semjon-geist@gmx.de>"]
license = "Not open source"
readme = "README.md"
packages = [
    { include = "snake" },
]
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
matplotlib = "^3.4.3"
numpy = "^1.24.3"
tensorflow = {version = "^2.13.0", python = ">=3.7, <3.12"}
tensorflow-io-gcs-filesystem = "^0.31.0"

[tool.poetry.dev-dependencies]
nox = "^2023.4.22"
nox-poetry = { version = "^1.0.3", python = ">=3.7,<4.0"}
autoflake = "^2.2.1"
pytest = ">=7.4.2"
coverage = {extras = ["toml"], version = ">=7.3.1"}
safety = ">=2.3.4"
typeguard = ">=4.1.5"
xdoctest = {extras = ["colors"], version = ">=1.1.1"}
sphinx = ">=7.1.2"
sphinx-autobuild = ">=2021.3.14"
flake8 = {version=">=6.1.0", python=">=3.8.1"}
black = ">=23.9.1"
flake8-bandit = ">=4.1.1"
flake8-bugbear = {version=">=23.7.10", python=">=3.8.1"}
flake8-docstrings = ">=1.7.0"
flake8-rst-docstrings = ">=0.3.0"
pep8-naming = ">=0.13.3"
darglint = {version = ">=1.8.1", python = ">=3.6,<4.0"}
pre-commit-hooks = ">=4.4.0"
sphinx-rtd-theme = ">=2.0.0rc2"
sphinx-click = ">=5.0.1"
pygments = "^2.16.1"
types-pkg-resources = ">=0.1.3"
types-requests = ">=2.31.0.2"
types-attrs = ">=19.1.0"
sphinx-rtd-dark-mode = ">=1.2.4"
sphinx-automodapi = ">=0.16.0"
Jinja2 = ">=3.1.2"
mypy = ">=1.5.1"
pyupgrade = {version=">=3.10.1", python=">=3.8.1"}
docutils = "^0.19"
myst_parser = ">=2.0.0"

[tool.poetry.scripts]
snake = "snake.__main__:main"

[tool.bandit]
skips = [] # "B403", "B404", "B603", "B607"

[tool.black]
line-length = 120
skip-string-normalization = false

[tool.ruff]
line-length = 120

[tool.ruff.mccabe]
max-complexity = 10

[tool.flake8]
select = ["B","B9","C","D","DAR","E","F","N","RST","B","W"]
ignore = ["W503", "D205"] # "E203","E501","RST201","RST203","RST301", "D100","N813","RST304","WPS412"
max-line-length = 120
max-complexity = 10
docstring-convention = "google"
per-file-ignores = ["tests/*:S101"]
exclude =[".git","__pycache__","docs/source/conf.py,build*","dist/*",".venv"]
strictness="long"
docstring_style="sphinx"

[tool.mypy]
strict = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true
disable_error_code = "misc"


[tool.isort]
skip = [] # isort different behaviour on ci
force_sort_within_sections=true
multi_line_output=3
include_trailing_comma=true
balanced_wrapping=true
line_length=120
profile = "black"

[tool.coverage.paths]
source = ["snake", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["snake"]

[tool.coverage.report]
show_missing = true

[build-system]
requires = [
    "poetry-core"
]
build-backend = "poetry.core.masonry.api"
